"""Pydantic models describing dashboard artefacts and metrics."""

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class ArtifactKind(str, Enum):
    """Enumerates supported artefact categories."""

    VIDEO = "video"
    AUDIO = "audio"
    TEXT = "text"


class MediaAsset(BaseModel):
    """Describes a generated media asset surfaced in the dashboard."""

    kind: ArtifactKind
    label: str
    path: Optional[str] = None
    url: Optional[str] = None
    thumbnail_path: Optional[str] = None


class ExternalLink(BaseModel):
    """Represents an external viewer entry (e.g. YouTube, dashboards)."""

    label: str
    url: str
    kind: Optional[str] = None


class RunArtifacts(BaseModel):
    """Aggregated artefacts generated by a workflow run."""

    run_id: str
    title: Optional[str] = None
    description: Optional[str] = None
    mode: Optional[str] = None
    created_at: Optional[datetime] = None
    thumbnail_path: Optional[str] = None
    video: Optional[MediaAsset] = None
    audio: List[MediaAsset] = Field(default_factory=list)
    text: List[MediaAsset] = Field(default_factory=list)
    external_links: List[ExternalLink] = Field(default_factory=list)


class RunMetrics(BaseModel):
    """Quality and performance metrics for a workflow run."""

    run_id: str
    title: Optional[str] = None
    mode: Optional[str] = None
    created_at: Optional[datetime] = None
    success: bool = False
    wow_score: Optional[float] = None
    quality_score: Optional[float] = None
    curiosity_gap_score: Optional[float] = None
    surprise_points: Optional[int] = None
    emotion_peaks: Optional[int] = None
    visual_instructions: Optional[int] = None
    retention_prediction: Optional[float] = None
    japanese_purity: Optional[float] = None
    view_count: Optional[int] = None
    like_count: Optional[int] = None
    comment_count: Optional[int] = None
    ctr: Optional[float] = None
    avg_view_duration: Optional[float] = None
    video_review_summary: Optional[str] = None
    video_review_actions: List[str] = Field(default_factory=list)


class DashboardSummary(BaseModel):
    """Aggregated QA metrics summarising recent runs."""

    total_runs: int = 0
    successful_runs: int = 0
    average_wow_score: Optional[float] = None
    average_quality_score: Optional[float] = None
    average_retention_prediction: Optional[float] = None
    average_view_count: Optional[float] = None
    average_ctr: Optional[float] = None


class DashboardMetrics(BaseModel):
    """Container object returned by the dashboard API."""

    summary: DashboardSummary
    runs: List[RunMetrics] = Field(default_factory=list)
