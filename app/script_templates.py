"""スクリプトテンプレートモジュール

kafkafinancialgroupブログの分析スタイルと
YouTube動画のベストプラクティスを統合したテンプレート集
"""

from typing import List, Dict, Any

# kafkafinancialgroupスタイルの分析フレームワーク
KAFKA_ANALYSIS_STYLE = """
【分析フレームワーク】(高品質金融分析スタイル)

## 1. 要因分解アプローチ
- 単一要因ではなく、複数要因の複合的影響を分析
- 定量的因果関係を明確化
- 例: 「EPS増加 = 粗利率改善(+5%) × 販管費率低下(+3%)」

## 2. データドリブン原則
- 具体的数値を必ず提示（XX%、YY円など）
- 時系列比較（前年比、前四半期比、通期予想比）
- 競合比較・業界平均との対比
- グラフ化可能なデータ選択

## 3. リスク分析の徹底
- ポジティブ要因だけでなく、リスク要因も明示
- 「ただし〇〇の場合は...」という条件付き分析
- シナリオ分析（ベスト/ベース/ワーストケース）

## 4. 構造化された論理展開
- 結論ファースト（最初の30秒で結論提示）
- 理由の階層化（第一要因→第二要因→複合効果）
- 具体例とデータによる裏付け
- リスクと対応策の提示
- 最終結論で再確認
"""

# YouTube動画のベストプラクティス
VIDEO_SCRIPT_RULES = """
【動画スクリプトルール】(視聴維持率40%+目標)

## 構成 (8-10分、480-600秒)
0:00-0:30  オープニング (30秒)
  - 最初の15秒で結論提示（視聴継続の動機付け）
  - 視聴者の問題意識に共鳴

0:30-2:30  本編1: 第一要因の深掘り (2分)
  - 要因の説明
  - データによる裏付け
  - 具体例・グラフ提示

2:30-4:30  本編2: 第二要因の深掘り (2分)
  - 要因の説明
  - データによる裏付け
  - 複合効果の説明

4:30-6:30  本編3: リスク・注意点 (2分)
  - リスク要因の提示
  - シナリオ分析
  - 対応策・注目ポイント

6:30-7:30  まとめ (1分)
  - 3ポイント要約
  - 行動への呼びかけ

7:30-8:00  エンディング (30秒)
  - CTAテンプレート（チャンネル登録、高評価、コメント）

## テンポとリズム
- **一文15文字以内**（TTS最適化、聞き取りやすさ）
- **会話リズム**: 田中3文→鈴木1文→田中2文
- **30秒ごとに視覚変化**（グラフ、強調、データ表示）
- **質問で引き込む**: 鈴木が視聴者目線の疑問を投げかける

## 視覚要素の指示
- 数値表示: `(字幕: 25.3%増)`
- グラフ挿入: `(グラフ: EPS推移)`
- 強調表示: `(強調: 重要ポイント)`
- データ比較: `(比較表: 前年比較)`

## PREP法の活用
Point (結論) → Reason (理由) → Example (具体例) → Point (再結論)

各セクションで最低1回使用
"""

# 話者の役割定義
SPEAKER_ROLES = """
【話者の役割】(TTS設定と連動)

## 田中（メイン解説者）
- stability: 0.5
- 役割: データ分析、専門的解説、結論提示
- 話し方: 落ち着いた、論理的、データ重視
- 発話パターン: 3文連続で説明 → 鈴木に振る

## 鈴木（質問役・視聴者代弁）
- stability: 0.4
- 役割: 視聴者目線の質問、確認、ツッコミ
- 話し方: やや早口、リアクション多め
- 発話パターン: 短い質問・確認（1文）

## ナレーター（導入・まとめ）
- stability: 0.6
- 役割: オープニング、まとめ、CTA
- 話し方: 明瞭、テンポ良く
- 発話パターン: 簡潔な要約
"""


def create_enhanced_prompt(
    news_items: List[Dict[str, Any]],
    target_duration_minutes: int = 8,
    custom_focus: str = None
) -> str:
    """強化版プロンプト生成（kafkaスタイル統合）

    Args:
        news_items: ニュース項目リスト
        target_duration_minutes: 目標動画長（分）
        custom_focus: カスタム分析視点（オプション）

    Returns:
        強化版プロンプトテキスト
    """

    # ニュース要約
    news_summary = "\n".join([
        "■ ニュース{}: {}\n   要約: {}\n   出典: {}\n   重要度: {}".format(
            i+1,
            item.get('title', 'タイトルなし'),
            item.get('summary', '要約なし'),
            item.get('source', '出典不明'),
            item.get('impact_level', '中')
        )
        for i, item in enumerate(news_items[:5])  # 最大5件
    ])

    # 目標文字数の計算（1分あたり約300文字）
    target_chars = target_duration_minutes * 300

    custom_focus_section = ""
    if custom_focus:
        custom_focus_section = "\n【特別な分析視点】\n{}\n".format(custom_focus)

    prompt = """
【YouTube動画スクリプト生成指示】

{}

{}

{}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

【ニュース素材】
{}

{}

【出力要件】
- 総尺: 約{}分（{}文字程度）
- 形式: 対談形式（田中・鈴木・ナレーター）
- 構造: PREP法を3箇所以上で使用
- データ: 具体的数値を5箇所以上で提示
- 視覚指示: グラフ・字幕指示を10箇所以上

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

【出力フォーマット（厳守）】

## オープニング (0:00-0:30)

ナレーター: 「こんにちは。今回は[話題の核心]について解説します」

田中: 「結論から言うと、[明確な結論]です」
(字幕: [重要数値])

鈴木: 「え、それって[視聴者の疑問]ってことですか？」

田中: 「その通りです。詳しく見ていきましょう」

---

## 本編1: 第一要因の分析 (0:30-2:30)

田中: 「まず第一の要因は[要因名]です」

田中: 「データを見てください」
(グラフ: [データ名])

田中: 「[具体的な数値]が[変化]しています」
(字幕: XX%増加)

鈴木: 「なるほど。具体的にどういうことですか？」

田中: 「例えば[具体例]です」

田中: 「これにより[影響・結果]が生じました」

鈴木: 「つまり[言い換え]ってことですね」

田中: 「はい、その理解で正しいです」

---

## 本編2: 第二要因の分析 (2:30-4:30)

田中: 「次に第二の要因を見ます」

田中: 「それは[要因名]です」
(グラフ: [データ名])

鈴木: 「第一の要因とは違うんですか？」

田中: 「良い質問ですね」

田中: 「[要因1]は[性質]でしたが」

田中: 「[要因2]は[異なる性質]です」

田中: 「この2つが組み合わさると[複合効果]が起きます」
(比較表: 要因比較)

鈴木: 「なるほど！」

---

## 本編3: リスクと注意点 (4:30-6:30)

田中: 「ただし注意すべき点があります」

鈴木: 「何ですか？」

田中: 「[リスク要因1]です」
(字幕: リスク要因)

田中: 「もし[悪条件]になった場合」

田中: 「[悪影響]の可能性があります」
(グラフ: シナリオ分析)

鈴木: 「じゃあ逆に[好条件]ならどうなるんですか？」

田中: 「その場合は[好影響]が期待できます」

田中: 「今後注目すべきは[注目ポイント]です」

---

## まとめ (6:30-7:30)

ナレーター: 「今回のポイントを3つにまとめます」

ナレーター: 「1つ目、[要因1のまとめ]」

ナレーター: 「2つ目、[要因2のまとめ]」

ナレーター: 「3つ目、[リスク要因のまとめ]」

ナレーター: 「これらを踏まえて[最終的な示唆]」

---

## エンディング (7:30-8:00)

ナレーター: 「今回の動画が参考になったら」

ナレーター: 「チャンネル登録と高評価をお願いします」

ナレーター: 「コメント欄でご意見もお待ちしています」

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

【必須チェックリスト】
□ 一文15文字以内を遵守
□ 数値に(字幕: XX)指示を付与
□ グラフに(グラフ: YY)指示を付与
□ 田中3文→鈴木1文のリズム維持
□ PREP法を3箇所以上で使用
□ 総文字数{}文字程度
□ 視聴者目線の疑問を3回以上
□ 具体的数値を5箇所以上
□ リスク分析を必ず含む
□ 最終的な行動示唆を提示

上記フォーマットに従って、自然で魅力的なスクリプトを生成してください。
""".format(
        KAFKA_ANALYSIS_STYLE,
        VIDEO_SCRIPT_RULES,
        SPEAKER_ROLES,
        news_summary,
        custom_focus_section,
        target_duration_minutes,
        target_chars,
        target_chars
    )

    return prompt


def create_short_video_prompt(topic: str, duration_minutes: int = 3) -> str:
    """ショート動画用プロンプト（3分以内）

    Args:
        topic: トピック
        duration_minutes: 目標動画長（分）

    Returns:
        ショート動画用プロンプト
    """

    target_chars = duration_minutes * 300

    return f"""
【YouTube ショート動画スクリプト生成】

話題: {topic}
目標時間: {duration_minutes}分
目標文字数: {target_chars}文字

【構成】
0:00-0:15  フック（結論提示）
0:15-2:00  要点説明（1-2個）
2:00-2:30  まとめ・CTA

【ルール】
- 超短文（10文字以内）
- テンポ2倍速
- 視覚変化15秒ごと
- インパクト重視

【フォーマット】
田中: 「[結論]です」
(字幕: 衝撃数値)
鈴木: 「え！」
田中: 「理由は[要因]」
...

スクリプトを生成してください。
"""


# テンプレートのエクスポート
__all__ = [
    'KAFKA_ANALYSIS_STYLE',
    'VIDEO_SCRIPT_RULES',
    'SPEAKER_ROLES',
    'create_enhanced_prompt',
    'create_short_video_prompt',
]
